{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = series;\n\nvar _process = require('process');\n\nvar _process2 = _interopRequireDefault(_process);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction series(tasks, cb) {\n  var results = [];\n  var current = 0;\n  var isSync = true;\n\n  function done(err) {\n    function end() {\n      if (cb) cb(err, results);\n    }\n\n    if (isSync) _process2.default.nextTick(end);else end();\n  }\n\n  function each(err, result) {\n    results.push(result);\n    if (++current >= tasks.length || err) done(err);else tasks[current](each);\n  }\n\n  if (tasks.length > 0) tasks[0](each);else done(null);\n  isSync = false;\n}\n/**\n * Run the functions in the tasks array in series, each one running once the previous function has completed.\n * If any functions in the series pass an error to its callback, no more functions are run,\n * and callback is immediately called with the value of the error. Otherwise, callback receives an array of results\n * when tasks have completed.\n * Taken from https://github.com/feross/run-series\n *\n * @params {Array} tasks An array containing functions to run, each function is passed a callback(err, result) which it must call on completion with an error err (which can be null) and an optional result value.\n * @params {Function} callback(err, results) - An optional callback to run once all the functions have completed. This function gets a results array containing all the result arguments passed to the task callbacks.\n */","map":{"version":3,"names":["Object","defineProperty","exports","value","default","series","_process","require","_process2","_interopRequireDefault","obj","__esModule","tasks","cb","results","current","isSync","done","err","end","nextTick","each","result","push","length"],"sources":["/home/gayan/Music/Caculator/node_modules/.pnpm/react-textfit@1.1.1_biqbaboplfbrettd7655fr4n2y/node_modules/react-textfit/lib/utils/series.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = series;\n\nvar _process = require('process');\n\nvar _process2 = _interopRequireDefault(_process);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction series(tasks, cb) {\n    var results = [];\n    var current = 0;\n    var isSync = true;\n\n    function done(err) {\n        function end() {\n            if (cb) cb(err, results);\n        }\n        if (isSync) _process2.default.nextTick(end);else end();\n    }\n\n    function each(err, result) {\n        results.push(result);\n        if (++current >= tasks.length || err) done(err);else tasks[current](each);\n    }\n\n    if (tasks.length > 0) tasks[0](each);else done(null);\n\n    isSync = false;\n} /**\n   * Run the functions in the tasks array in series, each one running once the previous function has completed.\n   * If any functions in the series pass an error to its callback, no more functions are run,\n   * and callback is immediately called with the value of the error. Otherwise, callback receives an array of results\n   * when tasks have completed.\n   * Taken from https://github.com/feross/run-series\n   *\n   * @params {Array} tasks An array containing functions to run, each function is passed a callback(err, result) which it must call on completion with an error err (which can be null) and an optional result value.\n   * @params {Function} callback(err, results) - An optional callback to run once all the functions have completed. This function gets a results array containing all the result arguments passed to the task callbacks.\n   */"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EACzCC,KAAK,EAAE;AADkC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,MAAlB;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AAEA,IAAIC,SAAS,GAAGC,sBAAsB,CAACH,QAAD,CAAtC;;AAEA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAAEN,OAAO,EAAEM;EAAX,CAArC;AAAwD;;AAE/F,SAASL,MAAT,CAAgBO,KAAhB,EAAuBC,EAAvB,EAA2B;EACvB,IAAIC,OAAO,GAAG,EAAd;EACA,IAAIC,OAAO,GAAG,CAAd;EACA,IAAIC,MAAM,GAAG,IAAb;;EAEA,SAASC,IAAT,CAAcC,GAAd,EAAmB;IACf,SAASC,GAAT,GAAe;MACX,IAAIN,EAAJ,EAAQA,EAAE,CAACK,GAAD,EAAMJ,OAAN,CAAF;IACX;;IACD,IAAIE,MAAJ,EAAYR,SAAS,CAACJ,OAAV,CAAkBgB,QAAlB,CAA2BD,GAA3B,EAAZ,KAAiDA,GAAG;EACvD;;EAED,SAASE,IAAT,CAAcH,GAAd,EAAmBI,MAAnB,EAA2B;IACvBR,OAAO,CAACS,IAAR,CAAaD,MAAb;IACA,IAAI,EAAEP,OAAF,IAAaH,KAAK,CAACY,MAAnB,IAA6BN,GAAjC,EAAsCD,IAAI,CAACC,GAAD,CAAJ,CAAtC,KAAqDN,KAAK,CAACG,OAAD,CAAL,CAAeM,IAAf;EACxD;;EAED,IAAIT,KAAK,CAACY,MAAN,GAAe,CAAnB,EAAsBZ,KAAK,CAAC,CAAD,CAAL,CAASS,IAAT,EAAtB,KAA0CJ,IAAI,CAAC,IAAD,CAAJ;EAE1CD,MAAM,GAAG,KAAT;AACH;AAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script"}